# .ai/workflows/py_edit_enhanced.yaml
version: 2
metadata:
  id: PY_EDIT_V2
  name: "Enhanced Python Edit Workflow"
  description: "Predetermined Python editing with robust constraint handling"
  lane: agentic_implementation
  timeout_minutes: 30
  retry_strategy: "exponential_backoff"

triggers:
  manual:
    inputs:
      - name: files
        type: globs
        required: true
        validation: "*.py"
      - name: prompt
        type: string
        required: true
        max_length: 500
  
  automatic:
    git_hooks: ["pre-commit"]
    file_patterns: ["**/*.py"]
    conditions:
      - "has_todos"
      - "lint_failures"

defaults:
  tool: aider_local
  commit_prefix: "py-edit:"
  branch_strategy: "create_feature_branch"
  rollback_on_failure: true

# Constraint evaluation order matters
constraint_sets:
  pre_execution:
    - git_state
    - file_validation
    - resource_limits
  
  tool_selection:
    - capability_match
    - quota_availability
    - quality_gates
  
  post_execution:
    - quality_validation
    - security_scan

# Enhanced steps with error handling
steps:
  - id: "1.001"
    name: "Initialize Workflow Context"
    actor: system
    timeout: 30s
    critical: true
    actions:
      - type: validate_inputs
        params:
          files: "{{input.files}}"
          prompt: "{{input.prompt}}"
      - type: create_context
        params:
          workflow_id: "{{metadata.id}}"
          timestamp: "{{now}}"
          user: "{{git.user.name}}"
    
    on_failure:
      action: abort
      message: "Invalid workflow inputs"

  - id: "1.002" 
    name: "Evaluate Constraints & Route"
    actor: constraint_engine
    timeout: 10s
    critical: true
    actions:
      - type: run_constraint_set
        params:
          set: pre_execution
          files: "{{input.files}}"
      - type: select_tool
        params:
          candidates: ["aider_local", "claude_code", "vscode_editor"]
          fallback_chain: true
    
    outputs:
      selected_tool: "{{constraint_engine.selected_tool}}"
      violations: "{{constraint_engine.violations}}"
      reasoning: "{{constraint_engine.reasoning}}"
    
    on_failure:
      action: route_to_fallback
      fallback_tool: vscode_editor

  - id: "1.003"
    name: "Execute Primary Path (CLI Agent)"
    actor: "{{selected_tool}}"
    when: "{{selected_tool}} in ['aider_local', 'claude_code']"
    timeout: 15m
    retry:
      attempts: 2
      strategy: "different_model"
    
    actions:
      - type: cli_execute
        params:
          command: "{{tools[selected_tool].cmd}}"
          files: "{{input.files}}"
          prompt: "{{input.prompt}}"
          model_fallback: true
    
    validation:
      - type: syntax_check
        language: python
      - type: imports_resolve
      - type: no_obvious_errors
    
    on_failure:
      action: route_to_step
      target: "1.004"

  - id: "1.004"
    name: "Execute Fallback Path (Editor)"
    actor: vscode_editor
    when: "{{selected_tool}} == 'vscode_editor' or step['1.003'].failed"
    timeout: 30m
    
    actions:
      - type: open_editor
        params:
          files: "{{input.files}}"
          context: "{{input.prompt}}"
      - type: wait_for_commit
        params:
          pattern: "{{defaults.commit_prefix}}"
          max_wait: 30m
    
    on_timeout:
      action: prompt_user
      message: "Workflow waiting for your commit. Continue? (y/N)"

  - id: "1.005"
    name: "Quality Validation Pipeline"
    actor: system
    critical: true
    parallel: true
    
    tasks:
      lint:
        command: "ruff check {{input.files}}"
        allow_warnings: true
      
      typecheck:
        command: "mypy {{input.files}}"
        allow_warnings: true
      
      test:
        command: "pytest -xvs {{test_pattern}}"
        test_pattern: "test_*{{basename}}.py"
        required: false
      
      security:
        command: "bandit -r {{input.files}}"
        severity_threshold: "medium"
    
    success_criteria:
      required: ["lint", "typecheck"]
      optional: ["test", "security"]
    
    on_failure:
      action: create_fixup_commit
      auto_fix: ["lint"]

  - id: "1.006"
    name: "Finalize & Commit"
    actor: system
    actions:
      - type: stage_files
        params:
          files: "{{input.files}}"
      - type: commit
        params:
          message: "{{defaults.commit_prefix}} {{input.prompt | truncate:80}}"
          sign: true
      - type: push
        params:
          remote: origin
          branch: "{{git.current_branch}}"
    
    on_success:
      - type: cleanup_temp_files
      - type: log_metrics
        params:
          duration: "{{workflow.duration}}"
          tool_used: "{{selected_tool}}"
          files_changed: "{{input.files | length}}"